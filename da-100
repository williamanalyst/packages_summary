# DA-100
##############################################################################################
# Exam Structure:
##############################################################################################
# 1. Prepare the Data:
    # Get data from different data sources:
        # Identify and connect to a data source:
            # Flat file location: Local, OneDrive for Business, OneDrive Personal, SharePoint Team Sites.
            # Data from Azure Analysis Services: 
        # Change data source settings:
        # Select a shared dataset or create a local dataset
        # select a storage model:
        # 
            # M Language: q query formula lanaguage that can be used in Power Query Editor in order to prepare the data before it can be loded in the model.
            # DAX Language (Data Analysis Expression): an analytical data calculation language which can be used for in-depth data analysis during the data view phase.
#
##############################################################################################
# 2. Model the Data:
    # Design a data model in Power BI:
        # e.g. Star Schema ( 1 fact table + multiple dimension tables )
            # Fact table: contains observational or event data values.
                # e.g. sales order, price, product counts, transactional dates and times, etc.
            # Dimension table: contains the detail about the data in the fact table.
    #
    # Table Properties:
        # General:
            # Field 1: Edit the name and description of the column.
            # Field 2: Add synonyms that can be used to identify the column when you are using the Q&A feature.
            # Field 3: Add a column into a folder to further organize the table structure.
            # Field 4: Hide or Show the Column.
        # FormattingL
            # Field 1: change the data type
            # Field 2: format the date
    #
    # Create a common date table:
        # Can be built in 3 ways:
            # Source Data:
                # specifically identify company holidays, separate calendat and fiscal year, identify weekends versus weekdays, etc.
            # DAX:
                # Dates = CALENDAR(DATE(2011, 5, 31), DATE(2021, 5, 31))
                # Year = YEAR(Dates[Date])
                # Month = MONTH(Dates[Date])
                # WeekNum = WEEKNUM(Dates[Date])
                # DayofWeek = FORMAT(Dates[Date].[Day], "DDDD")
            # Power Query: 
                # New Query --> Blank Query
                # = List.Dates(#date(2021, 05, 31), // start date
                    365 * 10, // mumber of periods
                    #duration(1, 0, 0, 0)) // period = 1 days, 0 hours, 0 minutes, 0 seconds
    #
    # Mark the the official date table.
    #
    # Flatten parent-child hierarchy:
        # Path = PATH(Employee[Employee_ID]. Employee[Manager_ID]) # 
        # Level1 = PATHITEM(Employee[Path], 1)
        # Level2 = PATHITEM(Employee[Path], 2)
    #
    # Cross-filter Direction:
        # Single Cross-filter direction:
            # Only 1 table in a relationship can be used to filter the data.
                # e.g. for a one-to-many or  many-to-one relationship, the cross-filter direction will be from the "one-side", meaning that the filter will
                    # only occur in the table that has the unique values.
        # Both Cross-filter directions or bi-directional cross-filtering:
            # One table in a relationship can be used to filter the other.
                # e.g. a dimension table can be filtered through the fact table, and the fact table can be filtered through the dimension table.
            # You might have lower-performance when using bi-directionsl cross-filtering with many-to-many relationship.
                # You should not enable bi-directional cross-filtering relationships unless you fully understand the ramifications of doing so.
                    # Enabling bi-directional cross-filtering can lead to ambiguity, over-sampling, unexpected results, and potential performance degradation.
    #
    # Creating Measures using DAX:
        # Build Quick Measures:
            # 
        # Create Calculated Columns:
            # New_Columns = 'table1'[column1] * 'table1'[column2]
        # Use DAX to build measures:
        # Discover how content affects DAX measures.
        # Use the CALCULATE function to manipulate filters:
            # The CALCULATE function in DAX is one of the most important functions that a data analyst can learn.
            # The function name "CALCULATE" does not adequately describe what the function is intended to do.
                # The CALCULATE funcion is your method od creating a DAX measure that will override cerrain portions of the context that are being used to the correct result.
                    # e.g. Total_Sales_2015 = CALCULATE(SUM('Sales'[value]), YEAR('Sales'['date']) = 2015)
        # Implement time intelligence by using DAX:
            # 
    # Optimize a model (through making changes to the current state of the data model) for performance: 
        # Review the performance of measures, relationship, and visuals:
            # 90% of poor performance come from a bad data model, or bad Data Analysis Expression (DAX)
            # Option 1: Ensuring that the correct data types are used.
            # Option 2: Deleting unnecessary columns and rows.
            # Option 3: Avoiding repeated values.
            # Option 4: Replacing numeric columns with measures.
            # Option 5: Reducing Cardinalities.
            # Option 6: Analyzing model metadata.
            # Option 7: Summarizing data where possible.
                # Analyze Performance: (performance analyzer)
                    # Performance analyzer will help you identify elements that are contributing to your performance issues, which can be used during troubleshooting.
                    # Before you run performance analyzer, to ensure you get the most accuract results in your analysis/ test, 
                        # you should start with a clear visual cache and clear data engline cache:
                            # Visual Cache:
                                # When you load a visual, you can't clear this visual cache without closing the Power BI Desktop and opening it again.
                                    # To aviod any caching in play, you need to start your analysis with a clean visual cache.
                            # Data Engline Cache:
                                # When a query is run, the resutls are cached, so the results of your analysis will be misleading.
                                # You need to clear the data cache before running the visual.
                                    # To clear the cache, you can either restart Power BI Desktop or connect DAX Studio to the data model and then call Clear Cache.
        # Resolve issues and optimize performance:
            # Visuals: 
                # Option 1: reduce the number of visuals on the report page.
                # Option 2: Reduce the number of fields in each visual.
            # DAX Query:
                # less than 120 milliseconds would be a good indicator.
            # Correct Relationship:
            # Matadata:
                # Metadata is information about other data.
                # Power BI metadata contains information on your data model, such as the name, data type and format of each column, schema of the database,
                    # the report design, when the file was last modified, the data refresh rates, etc.
                # When you load data into Power BI desktop, it is good practice to analyze the corresponding metadata so you can identify any inconsistencies.
                    # Thtough analyzing the metadata, you could identify unnecessary columns, errors within your data, incorrect data types, volume of data loaded, etc.
                # You could use the Power Query editor in Power BI Desktop to examine the columns, rows, and values of the raw data.
                    # The Power Query Options include:
                        # Unnecessary Columns:
                        # Unnecessary Rows:
                        # Data Type:
                        # Query Names:
                        # Column Details:
                            # Column quality:
                            # Column distribution:
                                # Distinct Values Count: the total number of different values found in a given column.
                                # Unieue Values Count: the total number of values that only appear once in a given column.
                            # Column profile:
                # Auto Date/time feature:
                    # Power BI Desktop automatically creates a hidden calculated table for each data column, provided that cettain conditions are met.
                        # The auto date/time option allows you to work with time intelligence when filtering, grouping, and drilling down through calendar time periods.
                            # Users are recommended to keep auto date/time option enabled Only when working with calendar time periods and when having a simple model.
                            # Turn off the auto date/time option: file --> options and settings --> options --> Global/ Current file --> data load --> time intelligence
        # Use variables to improve performance and troubleshooting:
            # Improved performance:
                # Variables can make measures more efficient because they remove the need for Power BI to evaluate the same expression multiple times.
            # Improved readability:
                # variables have short, self-explaining names and are used in place of an ambiguous, multi-worded expression.
                    # Users might find it easier to read and understand the formulas when variables are used.
            # Simplified debugging:
                # You could use variables ti debug a formula and test expressions, which can help during trouble-shooting.
            # Reduced complexity:
                # 
            # e.g. Sales_YOY_Growth = 
                    VAR SalesPriorYear = CALCULATE([Sales], PARALLELPERIOD( 'Date'[Date], -12, MONTH ) )
                    VAR SalesVariance = DIVIDE ( ([Sales] - SalesPriorYear), SalesPriorYear)
                    RETURN SalesVariance
        # Improve preformance by reducing cardinality levels:
            # Cardinality is the term that is used to describe the uniqueness of the value in a column.
            # Cardinality is also used in the context of the relationships between 2 tables, where it describes the direction of the relationship.
                # When distinct count is high --> low level of cardinality --> better performance
                # When discount count is low --> high level of cardinality --> poorer performance
            # e.g. Use a summary table from the data source:
                # Where a detail table mighr contain every transaction, a summary table would contain 1 record per day/ week/ month, with average, etc.
        # Optimize DirectQuery with table level storage:
            # The performance of the model will not only be impacted by the performance of the underlying data source, but also:
                # influenced by the network latency, the performance of the data source's server and how many other workloads are running, etc.
            # Benefits of DirectQuery:
                # Condition 1: It is suitable in case where the data changes frequently and near real-time reporting is required.
                # Condition 2: It can handle large data without need to pre-aggregation.
                # Condition 3: It applies data sovereignty restrictions to comply with legal requirements.
                # Condition 4: It can be used with a multidomentionsl data source that contains measures such as SAP Business Warehouse (BW).
            # If your organizations needs to use DirectQuery, you should clearly understand its behaviour within Power BI Desktop and be aware of its limitations.
                # You will then be in a good position to take action to optimize the directquery model as much as possible.
            # Limitations of DirectQuery connections:
                # Limit 1: Performance, which is dependent on the data source.
                # Limit 2: Security, to aviod situations that certain users should not have access to some data involved.
                # Limit 3: Data Transformation (certain data source does not allow data transformation)
                    # e.g. when you connect to OLAP source, you cannot make any transformation at all, the entire external model is taken from the data source.
                # Limit 4: modelling
                    # some modelling capabilities only exist for imported dataset, whereas not available or limited to DirectQuery
                # Limit 5: reporting
                    # Quick insighrs and Q&A features are not supported for DirectQuery mode.
                    # Also, the use of the explore feature in Excel will likely to result in poorer performance.
            # Optimize the underlying data source (connected database):
                # Aviod the use of complex calculated columns because the calculalation expression will be embedded into the source queries.
                    # It is more efficient to push the expression back to the source because it aviods the push down.
                    # You could also consider adding surrogate key columns to dimension-type tables.
                # Review the indexed and verify that the current indexing is correct.
                    # If you need to create new indexes, ensure that they are appropriate.
            # Customize the Query reduction options:
                # Option 1: Reduce nnumber of queries sent by
                    # By default, every visual interacts with every other visual.
                        # You can optionally choose which visual interact with each other by using the "Edit Interactions" featu
                # Option 2: Slicers
                    # By default, the instantly apply slicer changes option is selected.
                        # To force the report users to manually spply slicer changes, select the "Add an Button to each slicer to apply changes when you are ready" option.
                # Option 3: Filters
                    # By default, the instant apply basic filter changes option is selected.
                        # Add an apply button to all basic filters to apply changes when you are ready.
                        # Add a single apply button to the filter pane to aooly changes at once.
        # Create and manage aggregations:
##############################################################################################
# 3. Visualize the Data:
    # Work with Power BI Visuals:
        # Add visualizations to reports:
            # 
        # Choose an effective visualization:
            # Line and Area Chart:
                # 
            # Bar and Column Charts:
                # Present specific data across different categories in a stacked or clustered format.
            # Pie chart, donut charts, and treemaps.
                # Show you the relationship of the parts to the whole by dividing the data into segments.
                # Treemap is ideal to visualize:
                    # Scenario 1: large amounts of hierarchical data when a bar chart cannot effectively handle the large number of values
                    # Scenario 2: proportions between each part and the whole
                    # Scenario 3: the distribution pattern of the measure across each level of categories in the hierarchy
                    # Scenario 4: attributes, by using the size and color coding
                    # Scenario 5: spot patterns, outliers, most-important contributors, and exceptions.
            # Combo charts:
                # Scenario 1: compare multiple measures with different value ranges
                # Scenario 2: illustrate the correlation between 2 measures in 1 visual
                # Scenario 3: identify whether 1 measure meets the target that is defined by another measure
                # Scenario 4: conserve space on your report page
            # Card visualization:
                # multi-row card visualization: display 1 or more data points, with 1 data point for each row
            # Funnel Visualization:
                # displays a linear process that has sequential connected stages, where items flow sequentially from 1 stage to the next.
                    # Scenario 1: when the data is sequential and moves through at least 4 stages
                    # Scenario 2: when the number of items in the first stage is expected to be greater than the number of items in the final stage
                    # Scenario 3: to calculate a potential outcome (revenue, sales, deals, and so on) by stages
                    # Scenario 4: to calculate and track conversion and retention rates
                    # Scenario 5: to reveal the bottlenecks in a linear process
            # Gauge chart:
                # 
            # Waterfall Visualization:
                # 
            # Scatter chart:
                # 
            # Maps:
                # 
            # Sliver visualization:
                # Scenario 1: visulize commonly used or important filters on the report canvas for easier access.
                # Scenario 2: simplfy your ability to see the currrent filtered state without having to open a drop-down list
                # Scenario 3: filter by columns that are unneeded and hidden in the data tables.
                # Scenario 4: create more focused reports by putting slicers next to important visuals
            # Q&A Visualization:
                # The Q&A visualization allows you to ask natural language questions and get answers in the form of a visual.
                    # This visualization type can help you create visuals in the report, and it can also be used as a tool for customers to get answers quickly.
                # The Q&A visualization consists of 4 core components:
                    # Component 1: the question box, where users enter their question and are shown suggestions to help them complete the question.
                    # Component 2: a pre-populated list of suggested questions.
                    # Component 3: an icon that users can select to convert the Q&A visual into a standard visual.
                    # Component 4: an icon that users can select to open Q&A tooling, which allows designers to configure the underlying natural language engine.
                        # When entering natural language queries with Power BI Q&A, you can specify the visual type in your query.
                # You can access the Q&A feature by selecting the Q&A button type.
        #
        # Format and configure visualizations:
            # Title:
            # Background:
            # Border:
            # Tooltip:
                # When you add a visual, the default tooltip displays the data point's value and category.
                    # But you can customize this information to suit yout needs.
                        # e.g. by adding additional context and information, or specify additional, relevant data points when user hover over the visual.
        # Import a custom visual:
            # Certified visual:
                # Tested by Microsoft Power BI team code requirement: the visual is tested to verify that it does not access external services or resources.
                # And it follow secure coding patterns and guidelines.
            # If you want to create your own custom visual, you can use the custom visual software development kid (SDK), which is an open-source tool
                # based on NodeJS that is available on GitHub.
            # The custom visual is packaged as a single Power BI Visual Tools (.pbiviz) file that you can import into Power BI Desktop.
        # Add an R or Python visual:
        # Work with Key Performance Indicators:
            # 
    # Create a data-driven story with Power BI reports:
        # Design a report layout:
            # Present high-level information on a single page:
            # With visuals that represent different findings and insights from that dataset.
                # e.g. a broad picture + detail in each area/ perspective
        # Add buttons, bookmarks, and selections:
            # Bookmarks:
                # Capture the currently configured view of a report page so you can quickly return to that view later.
                    # When you add a bookmark, the current page, filter, slicers (including slicer type, e.g. drop-down or lisd) and slicer state,
                    visual selection state (e.g. cross-highlight filters), sort order, drill location, visibility of an object (by using the selection pane), 
                    focus or spotlight modes of any visible objects,
                    are also saved alongside with the bookmark.
            # Buttons:
                # create a more interactive experience for the report users
                    # e.g. left arrow, right arrow, reset, back, information Q&A, etc.
                    # Back:
                        # returns the user to the previous page of the report
                    # Bookmark:
                        # present the report page that's associated with a bookmark that is defined for the current report
                    # Drill through:
                        #
                    # Page navigation:
                        #
                    # Q&A:
                        #
                    # Web URL:
                        # 
            # Selections:
                # Allow you to determine what items in the report are visible and what items are hidden.
                # Selection are used alongside bookmarks and buttons.
        # Design report navigation:
            # 
        # Use basic interactions:
            # 
        # Use advanced interactions and drillthrough:
            # You can use visual interaction control to customize how the visualizations on your report page impact each other, in short, filter and highlight each other.
            # Cross-report Drillthrough:
                # The cross-report drillthrough feature alows you to contextually jump from 1 report to another report in the same Power BI service workspace or app.
        # Configure conditional formatting:
        # Apply slicing, filtering and sorting:
            # Slicer:
                # Function 1: provide quicker access to commonly used or important filters.
                # Function 2: simplyfy a user's ability to see the current filtered state without having to open a drop-down list
                # Function 3: fitler by columns that are unneeded and hidden in the data tables
                # Function 4: create more focused reports (by putting slicers next to important visuals)
                # Function 5: defer queries to the data model by using a drop-down slicer, particularly when you are using DirectQuery.
            # Filter:
                # Filter on this visual:
                # Filter on this page:
                # Filter on all pages:
                # Drillthrough: 
                    # Filters that apply to a single entity in a report
            # Sort Data:
                # Sort ascending, Sort Descending, Sort by in a visual.
        # Publish and export reports:
        # Comment on reports:
        # Use performance analyzer to tune reports:
            # Performance Analyzer:
            # Tune Performance:
                # 
        # Optimize reports for mobile use:
            # Design a mobile report layout:
            # Configure visuals and slicers for use in mibile reports:
                # By default, many visuals in Power BI are responsive, which means that they change dynamically to display the maximum amount of data and insights.
                # As a visual changes size, Power Bi gives priority to the data and makes small changes.
    # Create a dashboard in Power BI:
        # Feature 1: Dashboards can be created from multiple datasets or reports.
        # Feature 2: Dashboards do not have Filter, Visualization, and Fields panes that are in Power BI desktop, meaning that you cannot add new filters/ edits.
        # Feature 3: Dashboards can only be a single page, whereas reports can be multiple pages.
        # Feature 4: You cannot see the underlying dataset directly in a dashboard, while you can see the dataset in a report under the data tab in Power BI desktop.
        # Feature 5: Both dashboards and reports can be refreshed to show the latest dataset.
        #
        # Set a mobile view:
            # 
        # Add a theme to the visuals in your dashboard.
        # Configure data classification:
            # Option 1: Do not share
                # e.g. for highly sensitive data
            # Option 2: Ask for permission
                # 
            # Option 3: Ok to share
        # Add real-time dataset visuals to your dashboard:
        # Pin a live report page to a dashboard:
            # 
        # Configure a real-time dashboard:
            # Stream in Power BI:
                # Streaming data can come from various sources, including social media, factory sensors, service-usage metrics, etc.
                    # e.g. IoT Hub --> Azure Stream Analytics --> Power BI
                    # Data that comes from a streaming dataset is not stored in Power BI data model, isteat, it is stored in a temporary cache.
                        # So you cannot model the data with this type of dataset.
                        # The only way to visualize the data from a streaming data source is to create a tile directly on a dashboard and use a custom streaming data source.
                            # These tiles are optimized for displaying the data quickly and, because no database exists to pull the data from,
                                # thesr types of tiles have low latercy and are best suited for data that doesnot need other trensformation, such as temperature or humidity.
                # Visualize real-time data in Power BIl
                    # Open a dashboard --> Add Tile --> Real-time Data --> Custom Streaming Datasets --> Add Streaming Dataset
                        # Streaming dataset tiles can be in the form of line charts, stacked bar charts, cards, gauges, etc.
    # Create paginated reports (multi-page report):
        # Paginated reports are actually decendents of SSRS function. (e.g. create a long, multipage summary report/ list.)
        # You can use paginated reports for operational reports with tables of details and optional headers and footers.
    # Explore data by asking questions:
        # The Q&A visual consists of 3 main elements:
            # Element 1: Question Box
                # 
            # Element 2: Pre-populated suggestion tiles:
                # 
            # Element 3: Pin visual Icon
                # allow user to pin the visual onto a new or existing dashboard
##############################################################################################
# 4. Analyze the Data:
    # Explore Statistical Summary:
        # DAX:
            # Average_Quantity = AVERAGE( Sales[Order_Qty])
            # Top_10_Products = SUMX( TOPN(10, Product, Product[Product_Name], ASC), [Total_Sales] )
        # Histogram:
            # 
        # Top N Analysis:
            # e.g. use the Q&A visual to find the Top N.
    # Identify outliers with Power BI Visuals:
        # DAX:
        # Scatter Plot:
            # 
    # Group and bin data for analysis:
    # Apply Clustering Techniques:
        # Automatically find clusters:
            # 
    # Conduct time series analysis:
        # Play Axis:
    # Use the Analyze feature:
        # Note: the feature does not work if you have non-numeric filters applied to your visual and/or if you have measures filters applied.
        # Analyze --> Explain the increase/ Find where the distribution is different
    # Use Advanced Analytics custom visuals:
        # Quick Insights result card:
            # 
    # Review Quicl Insights:
    # Apply AI Insights:
        # Option 1: Text Analytics
        # Option 2: Vision
        # Option 3: Azure Machine Learning
    # Working with AI Visuals:
        # AI Split:
            # AI split works by considering all available fields and determining which one to drill into to get the highest/lowest value of the measure being analyzed.
##############################################################################################
# 5. Deploy and Maintain Deliverables:
    # Manage workspaces and datasets in Power BI:
        # A workspace is a centralized repository in which you can collaborate with colleagues and teams to create collections of reports and dashboards.
            # Benefit 1: focused collaboration efforts.
                # You can use worksoaces to house reports and dashboards for use by multiple teams.
            # Benefit 2: ability to share and present reports and dashboards in a single environment
                # 
            # Benefit 3: assurance that the highest level of scrurity is maintained by controlling who can access the datasets, reports and dashboards.
                #
    # Create a workspace:
        # Step 1: go to Power BI service
        # Step 2: select the Workspace drop-down menu
        # Step 3: select the "create a workspace" button at the bottom of the resulting panel
        # Step 4: Enter information such as Workspace name, description fields, and then "upload a workspace image".
        # Step 5: In the advanced drop-down menu, you can create a contact-list of users who will receive notifications if issues with the workspace occur.
    # Workspace Roles:
        # Admin:
            # Add/ remove other users.
            # Publish, update, and/ or share an app in a workspace.
            # Create, edit, delete and publish reports and content in a workspace.
            # View and interact with reports and dashboards in a workspace.
            # Configure the data refreshes.
        # Member:
            # Can complete all tasks that are associated with Admin, but cannot remove users.
            # Cannot delete workspace.
            # Cannot update the metadata about the workspace.
        # Contributor:
            # Cannot add or remove users.
            # Cannot publish, update, or edit an app in a workspace unless given this ability specifically by admin/ members.
            # Can create, update, and publish content and reports within the workspace.
            # Can schedule data refreshes.
        # Viewer:
            # Cannot add or remove users.
            # Can only view a report or dashboard in a workspace.
            # Can read data that is stored in workspace dataflows.
        # Note: if thr workspace is backed bby a Premium capacity, a non-Pro user can view content within the workspace under the viewer role.
            # In the resulting access window, you can add email addresses of individual user, mail-enabled security groups, distribution lists, Microsoft 365 groups,
                # and regular security groups, and then assign them to their specific roles.
#
    # Monitor usage and Performance:
        # Focus your efforts for improvement.
            # If you know the areas that experience the least performance, you can concentrate your efforts for improvement in those areas.
            # Quantify the impacr of your imports.
                # e.g. usage metrics help you determine your reports's success such as reader engagement.
        # Usage metrics report are available for Power BI Pro users and can only be accessed by users with the role type of Admin, Member or Contributor.
            # Viewers per day, Unique Viewers per day (which does not include users who returned to the same reports multiple times), and Shares per day charts.
            # Total Views, Total Viewers. and Total Shares KPI cards.
            # Total views and shares ranking (compares how your report is doing in comparison to other reports in the app)
            # Views by users (details about each specific user that viewed the dashboard)
        # Report Performance:
            # Typical Opening Time: how long it takes, at the 50 percentile, to open the report
            # Opening Time Trend: how the typical opening time changes over time.
                # This metric tells you how the report is perfora=ming as the number of users start to grow.
            # Daily/ 7-day performance charts: highlight the performance for 10, 50, and 90 percent of the open-report actions every day and over a 7-day period.
                # Filter for dates, so that you can see how the performance changes according to the date.
    # Development Pipeline (premium):
        # Benefit 1: increased productivity
        # Benefit 2: faster delivery of contents
        # Benefit 3: lower human intervention required
            # 
    # Development Environments:
        # Development:
        # Test:
        # Production: 
    # Configuration of deployment pipelines:
        # 
    # Configure Data Protection:
        # Sensitivity Labels:
            # e.g. general, confidential, etc.
    # Manage datasets in Power BI:
        # Create dynamic reports with parameters:
            # Dynamic reports are reports in which the data can be changed by a developer according to user specifications.
                # Dynamic reports are valuable because a single report can be used for multiple purposes.
                # If you use dynamic reports, you will have fewer individual reports to create, which will save organizational time and resources.
            # To create a dynamic report, you first need to write your SQL query:
                # Then you will use the "Get Data" feature in Power BI Desktop to connect to the database.
                    # Step 1: 
                    # Step 2: 
        # Create what-if parameters:
        # Use a Power BI Gateway to connect to on-premise data sources:
        # Configure a scheduled refresh dor a dataset:
        # Configure incremental refresh settings:
        # Manage and Promote Datasets:
        # Troubleshoot service connectivity:
        # Boost performance with query caching (Premium):
            # 
    # Configure incremental refresh settings:
        # The incremental refresh feature in Power BI is a popular feature because it allows you to refresh large datasets quickly and as often as you need.
            # without having to load historical data each time.
            # Benefit 1: Quicker refreshes
                # Only data that needs to be changed gets refreshed
            # Benefit 2: More reliable refreshes
                # you no longer need to kepp your long-running data connection open to schedule a refresh
            # Benefit 3: Reduced resource consumption
                # because you only need to refresh the smaller amount of data, the overall consumption of memory and other resources is reduced
            # Step 1: define the filter parameter
                # Open your dataset in Power Query Editor
                # On the Home Tab, select Manage Parameters
                # On the parameters window that displays, add 2 new parameters, RangeStart and RangeEnd
                    # Ensure that for both parameters, the type is set to Date/Time, and the suggesgted value is set to Any value
                # Regarding the current value, for the RangeStart parameter, enter the date on which you want to begin the import,
                    # and for the RangeEnd parameter, enter the date on which you want the import to end.
            # Step 2: use the parameter to apply a filter
                # Go to the applicable date column and then right-click that colum and select "Custom Filter"
                # In the filter rows window that displays, to avoid the double counting of rows, make sure that you keep rows where OrderDate is after or equal to
                    # the RangeStart oarameter and before the RangeEnd parameter.
                # Select "Close and Apply" from the power query editor.
            # Step 3: define the incremental refresh policy
                # When you have filtered the data, you can define the incremental refresh policy for the data table, which sets up the refresh process.
                    # Right-click the applicable table and then select "Incremental Refresh".
                # On the incremental refresh window that displays, turn on the incremental refresh option.
                    # Then, configure the refresh as required.
                        # e.g. you could define a refresh policy to store data for 5 full calendar years, plus data for the current year up to the current date
                            # and incrementally refresh 10 days of data.
            # Step 4: publish changes to Power BI service   
    #
    # Manage and Promote Datasets:
        # Promote a dataset:
            # You can only promote a dataset if you are a Power BI admin user or the owner of that dataset.
        # Certify a dataset:
            # You can only certify a dataset if you have been listed as a user in the tenant settings.
                # To certify a dataset, 
        # Note: promotion does not need specific permission, whereas certification requires permission from the dataset owner to access the dataset.
            #
    # Troubleshoot Service Connectivity:
        # Cloud services, such as SharePoint, do not require gateway because the data is already in the cloud.
            # You only need to provide your authorization credentials to set up a data source connection.
                # e.g. if your data source credentials are not up to date, you will need to take further action to invesigate and resolve the issue.
    # Boost performance with query caching (Premium):
        # Query Caching:
            # Query caching is a local caching feature that maintains results on a user and report basis.
            # This service isonly available to users with the Power BI Premium or Power BI Embeded.
                # When using query caching, the query results are only specific to a user, and you can only query caching on a specific page of a report.
                # Benefit of using query caching:
                    # Benefit 1: improvement of the performance of reports, dashboards, and dashboard tiles by reducing loading time and increasing query speed.
                        # The notion is especially true for datasets that are not refreshed often and are accessed frequently
                    # Benefit 2: it respects bookmarks and default filters, so even if you enable query caching, any bookmarks that you have created still exists.
                    # Benefit 3: cached query results are specific to the user
                    # Benefit 4: all security labels are followed
                    # Benefit 5: it reduces the load on your dedicated capacity because query caching allows for usage of dedicated capacity and not on the dataset.
                # Note: switing from on to Off will clear all previously saved query results.
                    # If many datasets have query caching enabled, and a refresh occurs, 
                        # a reduction in performance might occur because a large number of queries are being processed at once.
    #
    # Row-level Security (RLS) in Power BI:
        # Static Method:
            # Use a fixed value in the DAX filter:
        # Dynamic Method:
            # Uses a DAX function:
                # e.g. based on login email address
                # e.g. [email_address] = funcusername() # the function will compare the email address with the email that the user entered when signing.
        # Configuration Steps for Row-Level Security (RLS):
            # Step 1: Create a report in the Microsoft Power BI Desktop:
            # Step 2: Create RLS roles in Power BI Desktop by using DAX
                # Modelling --> Manage Roles --> Create
                    # e.g. by department
                    # e.g. DAX --> [department] = 'Clothing'
            # Step 3: Test the roles in Power BI Desktop
                # Modelling --> View as Roles --> Select Role to be testeds
                    # 
            # Step 4: Deploy the report to Microsoft Power BI Service
                # Publish
            # Step 5: Add members to the role in the Power BI Serivice
                # In the RLS screen, you can add Microsoft Azure Active Directory (Azure AD) users and security groups to the security role.
                    # If members are not added to the role, but they have access to the reports, RLS will not apply to them.
            # Step 6: Test the roles in Power BI service
                # You can test the roles inside Power BI service by selecting "Test as Role"
                    # This selection will display the report as if you were a member of the role in the Power BI service.
##############################################################################################
# Power BI Workflow:
    # Get Data (M Formula) --> Add Modelling (DAX Formula) --> Visualize Data --> Share Data

##############################################################################################
# Core Component of Data Analytics:
##############################################################################################
# 1. Descriptive Analytics:
    # Descriptive analytics help answer questions about what happened based on historical data, summarize large datasets to describe outcomes to stakeholders.
        # By developing KPIs, the metrics help track the success or failure of key objectives.
            # e.g. generating reports to provide an overview of an organization's sales or financial data.
# 2. Diagnostic Analytics:
    # Step 1: Identify anomalies in the data, e.g. unexpected changes in a metric or particular market segment
    # Step 2: Collect data that is relevant to these anomalies
    # Step 3: Use statistical techniques to discover relationships and trends that explain the anomalies.
    #
    # Diagnostic analytics help answer questions about why events happened.
    # Diagnostic analytics techniques suppliment basic descriptive analytics, and they use the findings from descriptive analytics to discover the cause of the events.
        # Then KPIs are further investigated to discover why these events improved or become worse.
# 3. Predictive Analytics:
    # Predictive analytics help answer questions about what will happen in the future.
    # Predictive analytics techniques use historical data to identify trends and determine if they are likely to recur.
        # e.g. neural network, decision tree, regression
# 4. Prescriptive Analytics:
    # Prescriptive analytics help answer question about which actions should be taken to achieve a certain goal or target.
    # This technique allows businesses to make informed decisions in the face of uncertainty.
        # Prescriptive analytics technique rely on machine learning strategies to find patterns in large datasets.
        # By analyzing past decisions and events, organizations can estimate the likelyhood of different outcomes.
# 5. Cognitive Analytics:
    # Cognitive analytics attempt to draw inferences from existing data and patterns, derive conclusions based on existing knowledge bases, and add these findings
        back to the knowledge base for future inferences, a self-learning feedback loop.
    # Cognitive analytics help you learn what might happen if circumstances change and determine how you might handle these situations.
        # Inferences are not structured queries based on a rules database, rather, 
            # they are unstructured hypotheses that are gathered from several sources and expressed with varying degrees of confidence.
        # Effective cognitive analytics depend on machine learning algorithms, and will use several natural language processing concepts to make sense of
            # previously untapped data sources, e.g. call center conversations, product review comments, etc.
##############################################################################################
# Roles in data analytics:
##############################################################################################
# 1. Business Analyst: 
    # Closer to the business, with higher domain knowledge, and better interpretablity towards data in that domain.
# 2. Data Analyst:
    # Area 1: Prepare
    # Area 2: Model
    # Area 3: Visualize
    # Area 4: Analyze
    # Area 5: Manage
    #
    # Responsible for profiling, cleaning, and transforming data.
        # e.g. designing and building scalable and effective data models.
        # e.g. enabling and implementing the advanced analytics capabilities into reports for analysis.
        # e.g. management of Power BI assets, including reports, dashboards, workspaces and underlying datasets that are used in the reports.
        # e.g. implementing and configuring proper security procedure, in conjunction with stakeholder requirements, to ensure safekeeping of all Power BI assets and data.
        # e.g. data analysts work with data engineers to determine and locate appropriate data sources that meet stakeholder requirements.
# 3. Data Engineer: (ingesting, transforming, validating and cleaning data to meet business needs and requirements)
    # Data engineers provision and set up data platform techniques that are on-premises and in the cloud.
        # Manage and secure the flow of structured and unstructured data from multiple sources.
            # The data platform that data engineers use include relational database, non-relational database, data stream, and file stores.
            # Data engineers also ensure that the data services securely and seamlessly integrate across data services.
# 4. Data Scientist: 
    # Data scientists perform advances analytics to extract value from data.
        # e.g. descriptive analytics that evaluate data through EDA
        # e.g. predictive analytics such as machine learning models to detect anomalies or patterns.
# 5. Database Administrator: (monitors and manages the overall health of a database and the hardware that the database relies on.)
    # Database administrators implements and manages the operational aspects of cloud-native and hybrid data platform solutions that are built on 
        Microsoft Azure data service and Microsoft SQL Server.
    # A database administrator is responsible for the overall availability and consistent performance and optimization of the database solution.
        # Database administors work with stakeholders to identify and implement the policies, tools and processes for data backip and recovery plans.
        # Database administors are also responsible for managing the overall security of the data, granting and restricting user access and previleges to the data, etc.
##############################################################################################
# Power BI: (a collection of services, apps and connectors that lets you connect to your data)
##############################################################################################
# Basic Building Block 1: Visualizations
    # a visual representation of data, also called visuals
# Basic Building Block 2: Datasets
    # A dataset is a collection of data that Power BI uses to create its visualizations.
        # Datasets can also be a combination of many different sources, which you can filter and combine to provide a unique collection of dataset for Power BI usage.
        # e.g. combining 3 databases, 1 website table, 1 excel table could still be considered as 1 single dataset.
# Basic Building Block 3: Reports
    # A report is a collection of visualizations that appear together on 1 or more pages.
# Basic Building Block 4: Dashboards
    # For the sharing of either a report or a collection of visualizations. (must fit on a single page, often called a canvas)
# Basic Building Block 5: Tiles
    # A tile is a single visualization on a dashboard. 




# Segment 1: Power BI Desktop (Microsoft Windows desktop application)
# Segment 2: Power BI Servier (online SaaS service)
# Segment 3: Mobile Power BI Apps (available on any device, with native mobile BI apps for Windows, iOS, and Andriod)
#






##############################################################################################
# Data Concepts:
##############################################################################################
# Data repository:
# Data Processing:
# Data Dimension:
    # Must be uniquely separated dimensions
# Incremental Refresh:
    # 
# Query Folding:
    # 
# Data Granularity:
# Directionality/ Cardinality to a relationship:
    # 
##############################################################################################
# Report design best practice:
    # Step 1: The 1st step in designing an exceptional report layout is to choose the correct format
        # e.g. the format requirement that is from your manager, or end user's preference.
            # You will need to consider the audience and speculate about the kind of format that they will want.
    # Step 2: Carefully consider each visual and element that you plan on using in the report.
        # e.g. everything should have a purpose, and you should consider how each element will appear to your report users.
    # Step 3: Draw a sketch of your report layout.
        # e.g. plan how the key metrics are demonstrated in sequence, the color pattern, background, etc.
            # This approach will help you get an idea of what it would look like before you spend considerable time physically designing it.
    # Step 4: Focus on the most important information.
        # e.g. highlight the key parts of your report with a bright color or summary icon so that it stands out and draw user's attention to most critical metrics.
    # Step 5: Report accessibility
        # Accessibility Standards:
            # Power BI is committed to accessibility standards under the Web Content Accessibility Guidelines (WCAG)
            # Web Content Accessibility Guidelines help make web content accessible to people with disabilities:
                # Guideline 1: perceivable 
                # Guideline 2: operable
                    # user interface components and navigation must be operable
                # Guideline 3: Understandable
                    # Information and operations of the user interface must be understandable
##############################################################################################
# Questions:
##############################################################################################
# When you create a workspace:
    # you need to add the name of the office 365 group.
#
# Security requirements for management of reports and dashboards:
    # Create a workspace for development
    # Create a depolyment pipeline and assign the development workspace to the development stage.
    # Define data source rules, and deploy to test, and production.
#
# How to control access to data in a certain department?
    # Option 1: Publish the app from the department's workspace and add the users in the department to the app.
    # Option 2: Assign the viewer role in the department to the users in the department.
# 
# How should you provide access for board members (external users)?
    # Add the Board members as guests in Azure Active Directory B2B, create an app, and invite them as guest users.
        # Should not add user as Office 365 workspace, which also grant access in building/ modifying reports.
        # Meanwhile, workpace is not user-friendly for end-users without prior knowledge.
        # Should not share app with email address, because people with external email addresses cannot see Power BI contents unless they are Azure AD B2B guest users.
# 
# You use Common Data Service as a data source, and use Power Query to connect and get the data.
    # Why is the "View Native Query" option disables whereas you want to investigate query performance issues.
        # The Common Data Service does not support Query folding.
#
# How to distribute a report among executives without giving them direct access to the workspace?
    # Step 1: Select the department workspace
    # Step 2: Click the "Publish App" button.
    # Step 3: In the "Setup" tab, provide the app name and description.
    # Step 4: In the Permission tab, specify the users who can view the app.

# Data Classification:
    # Data classification apply to the entire organization and cannot be limited to a specific group.
        # You cannot restrict a dashboard based on membership of an Azure AD security group.
    # Data classification for a dashboard is only displayed when the administrator has checked the "Show Tag" option for the classification.
        # 
#
# How to help Q&A feature to be implemented better?
    # Option 1: add synonyms to the tables
    # Option 2: set the row label on the table
        # a row label will allow you to define which column best identifies a row in a table
        # The label allows Q&A to generate a more helpful visualization in Q&A
            # You should choose a column and then use Q&A to verify that the column assists in creating visalizations.















