# k-means clustering
# 
from sklearn.preprocessing import StandardScaler

#
ss = StandardScaler()
df_scaled = ss.fit_transform(df_selected.astype(float)) # standardise the input variables

#
kmeans = KMeans(n_clusters = 3, random_state = 42).fit(df_scaled) # use k-means method to classify the items/observations 
labels = kmeans.labels_

#

# K-NN (K-nearest neighbors, to predict, choose the closest K points of the item to be predicted, 
    # check to which group do they belong to, and classify it to the group with highest frequency.)
from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborClassifier(n_neighbors = 6)
knn.fit(df['input'], df['target'])
#
preditopm = knn.predict(X_new)










# 
