# Git is a Version control system (free and open source)
    # (also software that runs on your local machine to track any changes made to files on your projects.) 
# which is a tool that manages changes made to the files and directories in a project.
# With Git, you can see the history of your files and recover an old version if needed.
    # Centralized Version Control:
        # Storage 
        # Tracking
    # Distributed Version Control: 
        # Cloning
        # Working Copy
        # Push/ Pull 
# Branch
# A branch is a copy of your source code where you can work without changing the original file.

# Merge

# Directory --> Folder on your computer
# Terminal or Command Line --> application on your machine that enables Interface for Text Commands
# CLI --> command line interface
# 

# Nothing that is saved to Git is ever lost, so users can always go back to see which results were generated
# Git automatically notifies you when your work conflicts with someone else's, so it's harder (but not impossible) to accidentally overwrite work
# Git can synchronize work done by different people on different machines, so it scales as your team does
# Version control isn't just for software: books, papers, parameter sets, 
# and anything that changes over time or needs to be shared should be stored and shared using something like Git.
#
# Repository: Each of your Git projects has 2 parts (files + directories) that you create and edit directly,
# and the extra information that Git records about the project's history. The combination of these 2 things is called a repository.
# Git stores all of its extra information in a directory called .git located in the repository's root directory.
# Git expects this information to be laid out precisely, so you never edit or delete anything in .git.
#
#########################################################################################################
# Command Line 
    # Windows Terminal
    # 

git --status # check the status of the repository

git --version # git version 2.45.2.windows.1

# 
git add sample_file.txt # add the sample file to the staging area
#
git diff folder/sample_file.csv # check the change history of certain file within the folder
git diff -r HEAD data/northern.csv
#

# git fetch

# git push --
# git 
#########################################################################################################
# GitHub
#########################################################################################################
# GitHub is an online service/ platform that allows developers to work together.
    # GitHub is essentially a storage service in the cloud where developers can work with each other.

# Why GitHub
    # Cloud Repository
    # Collaborative Development 
    # Project Management Tools 
        # 

# Code:
# Issues:
# Pull Requests: 
# Actions:
    # could help automation when certain trigger condition is met
#########################################################################################################
# " The Perfect Commit "
#########################################################################################################
# Step 1: Add the right changes
# Step 2: compose a good commit message	

# 







#

#

    #




#
#########################################################################################################
# Git
#########################################################################################################
# Git is a software that keeps track of changes that you have made to files and directories.
# And it's especially good in keep track of text changes











#
#



#











#
#








